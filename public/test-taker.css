@import url('https://fonts.googleapis.com/css?family=Work+Sans:300,600&display=swap');

@font-face {
  font-family: 'Crimson Pro';
  src: url(Fonts/CrimsonPro-VariableFont_wght.ttf);
}
@font-face {
  font-family: 'Crimson Pro';
  src: url(Fonts/CrimsonPro-Italic-VariableFont_wght.ttf);
  font-style: italic;
}

:root {
  --main-background: white;
  --secondary-background: #111a43;

  --english-color: #EA5A59;
  --math-color: #54C6FB;
  --break-color: #F5B233;
  --reading-color: #8786FC;
  --science-color: #64C13D;
  --writing-color: #F5B233;

  --writing-color-light: #F7C463;
  --science-color-light: #3cdd58;
  --math-color-light: #87D7FC;
  --reading-color-light: #BAB9FD;
  --english-color-light: #F08685;

  --default-color: rgb(122, 122, 122);
  --default-color-light: #BDBDBD;

  --accent-color: var(--default-color);
  --accent-color-light: var(--default-color-light);

  --english-passage-columns: 2;
  --math-passage-columns: 1;
  --reading-passage-columns: 2;
  --science-passage-columns: 1;

  --defualt-passage-columns: 1;

  --passage-columns: var(--defualt-passage-columns)
}

@media screen and (max-width: 800px) {
  :root {
    --english-passage-columns: 1;
    --math-passage-columns: 1;
    --reading-passage-columns: 1;
    --science-passage-columns: 1;
  }
}

.default-color {
  color: var(--default-color);
}
.default-background {
  background-color: var(--default-color);
  border-color: var(--default-color);
}
.english-color {
  color: var(--english-color);
}
.english-background {
  background-color: var(--english-color);
  border-color: var(--english-color);
}
.math-color {
  color: var(--math-color);
}
.math-background {
  background-color: var(--math-color);
  border-color: var(--math-color);
}
.reading-color {
  color: var(--reading-color);
}
.reading-background {
  background-color: var(--reading-color);
  border-color: var(--reading-color);
}
.science-color {
  color: var(--science-color);
}
.science-background {
  background-color: var(--science-color);
  border-color: var(--science-color);
}

/* general styles */
*, *::before, *::after {
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: "proxima-nova", sans-serif;
  font-size: 1rem;
  overflow-x: hidden;
  overflow-y: auto;
  width: 100vw;
  margin: 0;
}

img {
  max-width: 100%;
}

.spinner {
  display: block;
  border: 3px solid white;
  border-top: 2px solid transparent;
  border-radius: 50%;
  width: 1.25em;
  height: 1.25em;
  animation: spin 750ms linear infinite;
}

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-column {
  display: flex;
  flex-direction: column;
}

.justify-center {
  justify-content: center;
}

.align-center {
  align-items: center;
}

/* fix position of mathjax */
#bimg {
  position: relative;
  z-index: 1;
}

/* remove focus on mathjax */
.MathJax:focus {
  outline: none;
  border: none;
}

/* .MathJax {

} */

.color-accent {
  color: var(--accent-color);
}

.background-accent {
  background-color: var(--accent-color);
  color: white;
}

.box {
  border-radius: .5em;
  padding: .5em 2em;
  font-weight: 900;
}

section.hide {
  display: none;
}

.header {
  background-color: var(--secondary-background);
  color: white;
  display: flex; 
  flex-direction: row; 
  justify-content: space-between;
  align-items: center;
  padding: 1em;
}

.header > .container {
  flex: 1;
  display: flex;
  justify-content: center;
}

.header > .container:first-child {
  justify-content: start;
}

.header > .container:last-child {
  justify-content: end;
}

.header h1 {
  margin: 0;
}

.header .logo {
  height: 2rem;
  fill: white;
}

/* tutorial */

#tutorial {
  display: none;
  justify-content: center;
  align-items: center;
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, .4);
  z-index: 9999;
  overflow: hidden;
}

#tutorial.open {
  display: flex;
}

#tutorial .content {
  width: 80%;
  height: 90%;
  background-color: white;
  padding: 2em 3em;
  border-radius: 1em;
  display: flex;
  flex-direction: column;
  position: relative;
}

#tutorial .content .exit {
  color: var(--default-color);
  position: absolute;
  top: 1em;
  right: 1em;
  cursor: pointer;
}

#tutorial .content .tabs {
  flex: 0;
}

#tutorial .content .tabs input {
  position: absolute;
  top: -9999px;
  left: -9999px;
  visibility: hidden;
}

#tutorial .content .tabs label {
  font-size: 1em;
  background-color: white;
  display: inline-block;
  padding: .5em 1em;
  border-radius: .5em;
  font-weight: 900;
}

#tutorial .content .tabs input:checked + label {
  background-color: var(--secondary-background);
  color: white;
}

#tutorial .content .wrapper {
  display: none;
  overflow-y: scroll;
  flex: 1;
}

#tutorial .content .tabs:has( input#tutorial-quick:checked ) ~ .quick {
  display: block;
}

#tutorial .content .tabs:has( input#tutorial-assignment:checked ) ~ .assignment {
  display: block;
}

#tutorial .content .tabs:has( input#tutorial-question:checked ) ~ .question {
  display: block;
}

@media screen and (max-width: 800px) {
  #tutorial .content {
    width: 90%;
    height: 95%;
    padding: 1em 1.5em;
    border-radius: .5em;
  }
}


/* Landing screen */

.landing {
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
}

.landing .loading {
  display: none;
}

.landing .loading.active {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgb(0, 0, 0, 0.7);
  position: absolute;
  height: 100vh;
  width: 100vw;
  top: 0;
  left: 0;
  z-index: 999;
}

.landing .loading.active::after {
  content: '';
  display: block;
  height: 4em;
  width: 4em;
  border: 4px solid transparent;
  border-top-color: var(--main-background);
  /* border-bottom-color: var(--main-background); */
  border-radius: 50%;
  animation: full-turn 1200ms cubic-bezier(.75, -0.50, 0.25, 1.00) infinite;
  /* animation: wind-up-and-spin 1500ms linear infinite; */
}

@keyframes half-turn {
  0% { transform: rotate(0deg); }
  80% { transform: rotate(180deg); }
  100% { transform: rotate(180deg); }
}

@keyframes full-turn {
  0% { transform: rotate(0deg); }
  75% { transform: rotate(360deg); }
  100% { transform: rotate(360deg); }
}

@keyframes wind-up-and-spin {
  0% { transform: rotate(0deg); }
  30% { transform: rotate(-45deg); }
  70% { transform: rotate(405deg); }
  100% { transform: rotate(360deg); }
}

.landing .content {
  padding: 4em;
  display: grid;
  height: 100%;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto auto 1fr;
  gap: 2em;
  overflow-y: auto;
  position: relative;
}

@media screen and (max-width: 800px) {
  .landing .content {
    padding: 2em;
    grid-template-columns: 1fr;
    grid-template-rows: auto 1fr 1fr;
  }
}

.landing .content .helpers {
  color: var(--default-color);
}

.landing .content .helpers .feedback {
  margin: 0;
  cursor: pointer;
  position: absolute;
  top: 1em;
  left: 1em;
}

.landing .content .helpers .tutorial-bubble {
  border: 2px solid var(--default-color);
  width: 28px;
  height: 28px;
  border-radius: 50%;
  text-align: center;
  cursor: pointer;
  position: absolute;
  top: 1em;
  right: 1em;
}

.landing .content .next-lesson-wrapper {
  grid-column: 1 / -1;
  background-color: var(--break-color);
  color: white;
}

.landing .content .next-lesson-wrapper a {
  color: inherit;
}

.landing .content .full-assignment-wrapper {
  grid-column: 1 / -1;
}

.full-test-wrapper {
  /* padding: 2em;
  border: 2px solid black; */
}

.landing .content .assignment {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: space-between;
  color: white;
  padding: 1em;
  margin-bottom: 1em;
  cursor: pointer;
}

.landing .content .assignment.hide {
  display: none;
}

.landing .content .assignment.not-open {
  background-color: var(--default-color);
  border-width: 4px;
  border-style: solid;
  padding: calc(1em - 4px);
}

.landing .content .assignment * {
  margin: 0;
}

.landing .content .assignment svg {
  margin-right: .5em;
  height: 1.3em;
  fill: white;
}

.landing .content .assignment p {
  margin-right: .5em;
}

.landing .content .full-assignment-wrapper,
.landing .content .current-assignment-wrapper,
.landing .content .previous-assignment-wrapper {
  display: none;
}


.landing .content .full-assignment-wrapper:has(.assignment) {
  display: block;
}

.landing .content .current-assignment-wrapper:has(.assignment) {
  display: block;
}

.landing .content .previous-assignment-wrapper:has(.assignment) {
  display: block;
}

.assignment-wrapper > div > h4 {
  margin-bottom: 0;
  display: none;
}

.assignment-wrapper > div > h4:has( + *) {
  display: block;
}


/* Main screen */

.main {
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
}

.main .panels {
  flex: 1;
  min-height: 0;
  display: flex;
  flex-direction: row;
  position: relative;
  overflow: hidden;
}

.main .panels .hide {
  display: none;
}

.main .panels > div {
  padding: 2em;
  /* height: 100%; */
  overflow-y: auto;
}

.main .panels p.longQuote {
  text-indent: 0 !important;
  padding: 0em .75em;
}

.main .panels > div:not(:last-child) {
  border-right: 2px solid black;
}

.main .panels .selector {
  padding: 0;
  position: absolute;
  left: 0;
  background-color: white;
  height: 100%;
  width: 220px;
  transform: translateX(-100%);
  transition: all 250ms ease-in;
  z-index: 10;
  overflow: visible;
}

.main .panels .selector.open {
  transform: translateX(0%);
}

.main .panels .selector + .spacer {
  width: 0;
  margin: 0;
  padding: 0;
  border: none;
  transition: all 225ms ease-in;
}

.main .panels .selector.open + .spacer {
  margin-right: 220px;
}

.main .panels .selector .selector-scroll {
  height: 100%;
  overflow-y: auto;
}

.main .panels .selector .top-container {
  position: sticky;
  background-color: var(--main-background);
  top: 0;
  width: 100%;
  padding: 1em 1em;
  border-bottom: 2px solid rgb(197, 197, 197);
  z-index: 100;

}

.main .panels .selector .top-container > div {
  text-align: center;
}

#selectorContainer {
  position: relative;
}

#selectorContainer > .topic {
  position: sticky;
  top: 0;
  margin: 0;
  padding: .5em .5em;
  text-align: center;
  font-size: 1em;
  font-weight: 900;
  background-color: var(--accent-color);
  color: var(--main-background);

  white-space: nowrap;
  overflow-x: auto;
}

#selectorContainer > .separator {
  width: 100%;
  background-color: var(--accent-color);
  height: 4px;
}

.main .panels .selector input[type=radio] {
  position: absolute;
  top: -9999px;
  left: -9999px;
  z-index: -1;
}

.main .panels .selector .selector-wrapper {
  display: flex;
  flex-direction: row;
  align-items: baseline;
  justify-content: space-between;
  padding: .5em 1em;
  cursor: pointer;
}

.main .panels .selector input[type=radio]:checked + .selector-wrapper {
  background-color: var(--accent-color-light);
  color: var(--main-background);
}

.main .panels .selector .selector-wrapper:hover {
  background-color: var(--accent-color-light);
  color: var(--main-background);
}

.main .panels .selector input[type=radio]:checked + .selector-wrapper:hover {
  background-color: var(--main-background);
  color: var(--accent-color-light);
  outline: 2px solid var(--accent-color-light);
}

.main .panels .selector .selector-wrapper span {
  display: inline-block;
  width: 21px;
  height: 21px;
  border-radius: 50%;
  border: 2px solid var(--accent-color-light);
  background-color: var(--main-background);
}

.main .panels .selector .selector-wrapper span:first-child {
  margin-right: 1em;
  padding: 2px;
}

.main .panels .selector .selector-wrapper span:nth-child(2) {
  margin-left: 1em;
  padding: 1px;
  fill: var(--accent-color-light);
  border: none;
  background-color: transparent;
}

.main .panels .selector input[type=radio] + .selector-wrapper:hover > span:nth-child(2) {
  fill: var(--main-background);
}

.main .panels .selector input[type=radio]:checked + .selector-wrapper > span:nth-child(2) {
  fill: var(--main-background);
}

.main .panels .selector input[type=radio]:checked + .selector-wrapper:hover > span:nth-child(2) {
  fill: var(--accent-color-light);
}

.main .panels .selector .selector-wrapper span .flag {
  fill:var(--main-background);
}

.main .panels .selector .selector-wrapper span.flagged .flag {
  fill:var(--accent-color-light);
}

.main .panels .selector .selector-wrapper span.answered,
.main .panels .selector input[type=radio]:checked + .selector-wrapper:hover span.answered {
  border: 2px solid var(--accent-color-light);
  background-color: var(--accent-color-light);
}

.main .panels .selector input[type=radio]:checked + .selector-wrapper span.answered,
.main .panels .selector .selector-wrapper:hover span.answered {
  border: 2px solid var(--main-background);
}

.main .panels .selector .selector-wrapper span.answered .flag {
  fill:var(--accent-color-light);
}

.main .panels .selector .selector-wrapper span.answered.flagged .flag {
  fill:var(--main-background);
}

.main .panels .selector .submit {
  margin: .5em 1em;
}

.main .panels .selector .pull-tab {
  position: absolute;
  top: 25%;
  left: calc(100% + 2px);
  background-color: var(--accent-color);
  width: 1.5em;
  height: 4.5em;
  z-index: 2;
  transform: translateY(-50%);
  border-radius: 0em .75em .75em 0em;

  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.main .panels .selector .pull-tab div {
  width: 2px;
  height: 2em;
  background-color: white;
  margin-right: .3em;
}

.main .panels .selector .pull-tab div:last-child {
  margin-right: .1em;
}

.main .panels .passage {
  flex: 1.25;
}

.main .panels .passage .show-question {
  display: none;
  flex-direction: row;
  justify-content: end;
  width: 100%;
  position: sticky;
  top: 0;
}

.main .panels .passage .show-question > button {
  color: var(--accent-color);
  border: 2px solid var(--accent-color);
  font-size: 1em;
  background-color: var(--main-background);
  border-radius: .5em;
  padding: .5em 1em;
  cursor: pointer;
}

#passageContent {
  margin-top: 1em;
  column-count: var(--passage-columns);
}

#passageContent p {
  margin-top: 0;
  text-indent: 1.5em;
  margin-bottom: 1em;
}

#passageContent p.reference,
#passageContent p.preText {
  font-size: .9em;
  text-indent: 0;
  -webkit-column-break-inside: avoid; /* Chrome, Safari, Opera */
  page-break-inside: avoid; /* Firefox */
  break-inside: avoid; /* IE 10+ */
}

#passageContent p.paragraphLabel {
  text-align: center;
}

#passageContent p.experimentLabel {
  text-indent: 0;
}

#passageContent table {
  margin-bottom: 2em;
}

#passageContent img {
  display: block;
}

#passageContent span[data-question].box {
  border-radius: 0;
  padding: 0;
  font-weight: 300;
  width: 1.6em;
  height: 1.6em;
  text-indent: 0;
  text-align: center;
  outline: black solid 1px;
  display: none;
  margin: 0 .25em;
}

#passageContent span[data-question].box.highlighted {
  display: inline-block;
  background-color: var(--accent-color);
  color: var(--main-background);
  border-color: var(--accent-color);
}

.main .panels .passage span.highlighted {
  border-bottom: 2px solid var(--accent-color);
}

.main .panels .question {
  flex: .5;
}

.main .panels .question .show-passage {
  display: none;
  flex-direction: row;
  justify-content: start;
  width: 100%;
  position: sticky;
  top: 0;
  z-index: 9;
}

.main .panels .question .show-passage > button {
  color: var(--accent-color);
  border: 2px solid var(--accent-color);
  font-size: 1em;
  background-color: var(--main-background);
  border-radius: .5em;
  padding: .5em 1em;
  cursor: pointer;
}

.main .panels .passage.hide + .question {
  flex: 1;
  padding-right: 50%;
  transition: padding 225ms ease-in;
}

.main .panels .selector.open ~ .passage.hide + .question {
  padding-right: calc(50% - 220px);
}

.main .panels .question > div:first-child {
  margin-bottom: 1em;
}

#questionFlag {
  float: right;
  position: absolute;
  visibility: hidden;
}

.main .panels .question label.flag {
  display: block;
  width: 1.5em;
  height: 1.5em;
  padding: .25em;
  border-radius: 50%;
  float: right;
  background-color: white;
  fill: white;
}

#questionFlag:checked + label.flag {
  fill: var(--accent-color);
}

.main .panels .question .choice {
  display: flex;
  flex-direction: row;
  align-items: baseline;
  margin-bottom: .5em;
  cursor: pointer;
  width: max-content;
  max-width: 100%;
  padding: 0 .5em;
  border: 2px solid transparent;
  border-radius: .5em;
}

.main .panels .question .choice.correct {
  border-color: var(--accent-color)
}

.main .panels .question .choice * {
  margin: 0;
}

.main .panels .question .choice .choice-letter {
  display: inline-block;
  margin: 0;
  padding-right: .5em;
}

.main .panels .question .choice > input {
  position: relative;
}

.main .panels .question .choice > label {
  padding-left: .75em;
  position: relative;
}

.main .panels .question .choice > input:focus {
  outline: none;
}

.main .panels .question .choice > input[type="checkbox"] {
  margin-right: 1.5em;
  position: relative;
  visibility: hidden;
}

.main .panels .question .choice:hover > input[type="checkbox"] {
  visibility: visible;
}

.main .panels .question .choice > input[type="checkbox"]::after {
  content: '-';
  font-size: 2.5em;
  display: block;
  width: 1em;
  height: 1em;
  position: absolute;
  background-color: var(--main-background);
  top: -13px;
  left: -2px;
  text-align: top;
}

.main .panels .question .choice > input[type="checkbox"]:checked::after {
  content: '+';
}

.main .panels .question .choice > input[type="checkbox"]:checked~label {
  text-decoration: line-through;
}

.main .panels .question .choice > input[type="radio"]::after {
  content: '';
  width: calc(100% + 4px);
  height: calc(100% + 4px);
  border-radius: 50%;
  background-color: var(--main-background);
  border: 2px solid black;
  position: absolute;
  top: -2px;
  left: -2px;
}

.main .panels .question .choice:hover > input[type="radio"]:not(:disabled)::after {
  border-color: var(--accent-color);
}

.main .panels .question .choice > input[type="radio"]:checked::after {
  background-color: var(--accent-color);
  border: none;
}

#questionExplanationInput {
  visibility: hidden;
  position: absolute;
  top: -9999;
  left: -9999;
}

#questionExplanation > label[for="questionExplanationInput"] {
  margin-top: 1em;
}

#questionExplanation > label[for="questionExplanationInput"]::after {
  content: '';
  width: 0.75em;
  height: 0.75em;
  margin: 0 0.5em 2px;
  display: inline-block;
  border: 2px solid var(--accent-color);
  border-left-color: transparent;
  border-top-color: transparent;
  transform-origin: 8px 8px;
  transform: rotate(45deg);
  transition: all ease-in-out 250ms;
}

#questionExplanation > #questionExplanationInput:checked + label[for="questionExplanationInput"]::after {
  transform: rotateX(180deg) rotate(45deg);
}

#questionExplanation > #explanationWrapper {
  overflow: hidden;
}

#questionExplanation > #explanationWrapper > div {
  transform: translateY(calc(-100% - 2em));
  transition: all ease-in-out 250ms;
}

#questionExplanation > #questionExplanationInput:checked ~ #explanationWrapper > div {
  transform: translateY(0);
}

#questionExplanation a {
  color: var(--accent-color);
}

#answerToggleInput {
  visibility: hidden;
  position: absolute;
  top: -9999;
  left: -9999;
}

#answerToggleInput + #answerToggle > label[for="answerToggleInput"] {
  display: block;
  margin: .5em 0em;
  color: var(--accent-color);
  border: 2px solid var(--accent-color);
  width: max-content;
  padding: .25em .5em;
  border-radius: .5em;
}

#answerToggleInput:not(:checked) + #answerToggle > label[for="answerToggleInput"].hide-answer {
  display: none;
}

#answerToggleInput:checked + #answerToggle > label[for="answerToggleInput"].show-answer {
  display: none;
}

#answerToggleInput:not(:checked) ~ #questionChoices > .choice.correct {
  border-color: transparent;
}

@media screen and (max-width: 800px) {
  .main .panels .passage,
  .main .panels .question {
    transition: all 225ms ease-in;
    flex: none;
    width: 100vw;
    position: relative;
  }

  .main .panels .passage:not(.hide) + .question {
    left: -100%;
  }

  .main .panels .passage {
    right: 0%;
  }

  .main .panels > div.passage {
    border: none;
  }

  .main .panels .passage:not(.hide) + .question.mobile-hide {
    left: 100%;
  }

  .main .panels .passage.mobile-hide {
    right: 100%;
  }

  .main .panels .passage .show-question {
    display: flex;
  }

  .main .panels .passage:not(.hide) + .question .show-passage {
    display: flex;
  }

  .main .panels .selector.open ~ .passage.hide + .question,
  .main .panels .passage.mobile-hide + .question {
    padding-right: 2em;
  }

  .main .panels .selector.open + .spacer {
    margin-right: 0;
  }
}

.main .panels .directions {
  flex: 1;
}

.main .footer {
  background-color: var(--secondary-background);
  color: white;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  padding: 1em;
}

.main .footer .nav {
  display: flex;
  flex-direction: row;
  align-items: center;
  cursor: pointer;
}

.main .footer .nav.button {
  background-color: var(--main-background);
  border-radius: .5em;
  color: var(--secondary-background);
  padding: .5em 1em;
}

.main .footer .nav.hide {
  visibility: hidden;
}

.main .footer .nav h1 {
  margin: 0;
}

.main .footer .circle {
  border: 4px solid white;
  border-radius: 50%;
  width: min-content;
  height: min-content;
  padding: .5em;
}

.main .footer .circle:first-child {
  margin-right: 1em;
}


.main .footer .circle:last-child {
  margin-left: 1em;
}

.main .footer .circle .right-arrow {
  width: .7em;
  height: .7em;
  border-top: 3px solid white;
  border-right: 3px solid white;
  transform: translateX(-15%) rotate(45deg);
}

.main .footer .circle .left-arrow {
  width: .7em;
  height: .7em;
  border-bottom: 3px solid white;
  border-left: 3px solid white;
  transform: translateX(15%) rotate(45deg);
}

table {
	border-collapse: collapse;

  -webkit-column-break-inside: avoid; /* Chrome, Safari, Opera */
  page-break-inside: avoid; /* Firefox */
  break-inside: avoid; /* IE 10+ */
}

table th {
	background-color: var(--accent-color);
	color: #FFF;
}

table th, table td {
	text-align: center;
	border: 1px solid #ddd;
	padding: 4px 8px;
}

table tr:nth-child(even) td {
  background-color: #f2f2f2;
}

.border-top {
	border-top: 1px solid black;
}

.border-right {
	border-right: 1px solid black;
}

.border-bottom {
	border-bottom: 1px solid black;
}

.border-left {
	border-left: 1px solid black;
}